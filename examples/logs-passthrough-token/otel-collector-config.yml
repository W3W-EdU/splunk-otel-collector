receivers:
    splunk_hec:
      access_token_passthrough: true
    splunk_hec/final:
      access_token_passthrough: true
      endpoint: "localhost:18088"


exporters:
    splunk_hec/logs:
        # Splunk HTTP Event Collector token.
        # Note this is an _incorrect_ token.
        token: "00000000-0000-0000-0000-0000000000000"
        # URL to a Splunk instance to send data to.
        endpoint: "http://localhost:18088/services/collector"
        # Splunk index, optional name of the Splunk index targeted.
        index: "logs"
        # Maximum HTTP connections to use simultaneously when sending data. Defaults to 100.
        max_connections: 20
        # Whether to disable gzip compression over HTTP. Defaults to false.
        disable_compression: false
        # HTTP timeout when sending data. Defaults to 10s.
        timeout: 10s
        tls:
          # Whether to skip checking the certificate of the HEC endpoint when sending data over HTTPS. Defaults to false.
          # For this demo, we use a self-signed certificate on the Splunk docker instance, so this flag is set to true.
          insecure_skip_verify: true
        # We map the token passed through as the source of the event.
        hec_metadata_to_otel_attrs:
          source: com.splunk.hec.access_token
    debug:
      verbosity: detailed

processors:

extensions:
    health_check:
      endpoint: 0.0.0.0:13133
    pprof:
      endpoint: :1888
    zpages:
      endpoint: :55679

service:
    extensions: [pprof, zpages, health_check]
    pipelines:
      logs:
        receivers: [splunk_hec]
        exporters: [splunk_hec/logs]
      logs/output:
        receivers: [splunk_hec/final]
        exporters: [debug]
